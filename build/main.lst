ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	htim14
  18              		.section	.bss.htim14,"aw",%nobits
  19              		.align	2
  22              	htim14:
  23 0000 00000000 		.space	180
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.global	htim16
  25              		.section	.bss.htim16,"aw",%nobits
  26              		.align	2
  29              	htim16:
  30 0000 00000000 		.space	180
  30      00000000 
  30      00000000 
  30      00000000 
  30      00000000 
  31              		.section	.text.main,"ax",%progbits
  32              		.align	1
  33              		.global	main
  34              		.syntax unified
  35              		.code	16
  36              		.thumb_func
  38              	main:
  39              	.LFB40:
  40              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s 			page 2


  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "os.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** TIM_HandleTypeDef htim14;
  44:Core/Src/main.c **** TIM_HandleTypeDef htim16;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** static void MX_GPIO_Init(void);
  53:Core/Src/main.c **** static void MX_TIM14_Init(void);
  54:Core/Src/main.c **** static void MX_TIM16_Init(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief  The application entry point.
  66:Core/Src/main.c ****   * @retval int
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  41              		.loc 1 69 1
  42              		.cfi_startproc
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s 			page 3


  43              		@ args = 0, pretend = 0, frame = 0
  44              		@ frame_needed = 1, uses_anonymous_args = 0
  45 0000 80B5     		push	{r7, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
  51              	.LCFI1:
  52              		.cfi_def_cfa_register 7
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* USER CODE END 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Core/Src/main.c ****   HAL_Init();
  53              		.loc 1 77 3
  54 0004 FFF7FEFF 		bl	HAL_Init
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Configure the system clock */
  84:Core/Src/main.c ****   SystemClock_Config();
  55              		.loc 1 84 3
  56 0008 FFF7FEFF 		bl	SystemClock_Config
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Initialize all configured peripherals */
  91:Core/Src/main.c ****   MX_GPIO_Init();
  57              		.loc 1 91 3
  58 000c FFF7FEFF 		bl	MX_GPIO_Init
  92:Core/Src/main.c ****   MX_TIM14_Init();
  59              		.loc 1 92 3
  60 0010 FFF7FEFF 		bl	MX_TIM14_Init
  93:Core/Src/main.c ****   MX_TIM16_Init();
  61              		.loc 1 93 3
  62 0014 FFF7FEFF 		bl	MX_TIM16_Init
  94:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  95:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim14);
  63              		.loc 1 95 3
  64 0018 064B     		ldr	r3, .L3
  65 001a 1800     		movs	r0, r3
  66 001c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
  96:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim16);
  67              		.loc 1 96 3
  68 0020 054B     		ldr	r3, .L3+4
  69 0022 1800     		movs	r0, r3
  70 0024 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
  97:Core/Src/main.c ****   Os_Init_Task();
  71              		.loc 1 97 3
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s 			page 4


  72 0028 FFF7FEFF 		bl	Os_Init_Task
  73              	.L2:
  98:Core/Src/main.c ****   /* USER CODE END 2 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Infinite loop */
 101:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 102:Core/Src/main.c ****   while (1)
 103:Core/Src/main.c ****   {
 104:Core/Src/main.c ****     /* USER CODE END WHILE */
 105:Core/Src/main.c ****     Os_Handler();
  74              		.loc 1 105 5 discriminator 1
  75 002c FFF7FEFF 		bl	Os_Handler
  76 0030 FCE7     		b	.L2
  77              	.L4:
  78 0032 C046     		.align	2
  79              	.L3:
  80 0034 00000000 		.word	htim14
  81 0038 00000000 		.word	htim16
  82              		.cfi_endproc
  83              	.LFE40:
  85              		.section	.text.SystemClock_Config,"ax",%progbits
  86              		.align	1
  87              		.global	SystemClock_Config
  88              		.syntax unified
  89              		.code	16
  90              		.thumb_func
  92              	SystemClock_Config:
  93              	.LFB41:
 106:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 107:Core/Src/main.c ****   }
 108:Core/Src/main.c ****   /* USER CODE END 3 */
 109:Core/Src/main.c **** }
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /**
 112:Core/Src/main.c ****   * @brief System Clock Configuration
 113:Core/Src/main.c ****   * @retval None
 114:Core/Src/main.c ****   */
 115:Core/Src/main.c **** void SystemClock_Config(void)
 116:Core/Src/main.c **** {
  94              		.loc 1 116 1
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 64
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98 0000 90B5     		push	{r4, r7, lr}
  99              	.LCFI2:
 100              		.cfi_def_cfa_offset 12
 101              		.cfi_offset 4, -12
 102              		.cfi_offset 7, -8
 103              		.cfi_offset 14, -4
 104 0002 91B0     		sub	sp, sp, #68
 105              	.LCFI3:
 106              		.cfi_def_cfa_offset 80
 107 0004 00AF     		add	r7, sp, #0
 108              	.LCFI4:
 109              		.cfi_def_cfa_register 7
 117:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 110              		.loc 1 117 22
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s 			page 5


 111 0006 1024     		movs	r4, #16
 112 0008 3B19     		adds	r3, r7, r4
 113 000a 1800     		movs	r0, r3
 114 000c 3023     		movs	r3, #48
 115 000e 1A00     		movs	r2, r3
 116 0010 0021     		movs	r1, #0
 117 0012 FFF7FEFF 		bl	memset
 118:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 118              		.loc 1 118 22
 119 0016 3B00     		movs	r3, r7
 120 0018 1800     		movs	r0, r3
 121 001a 1023     		movs	r3, #16
 122 001c 1A00     		movs	r2, r3
 123 001e 0021     		movs	r1, #0
 124 0020 FFF7FEFF 		bl	memset
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 121:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 122:Core/Src/main.c ****   */
 123:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 125              		.loc 1 123 36
 126 0024 2100     		movs	r1, r4
 127 0026 7B18     		adds	r3, r7, r1
 128 0028 0222     		movs	r2, #2
 129 002a 1A60     		str	r2, [r3]
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 130              		.loc 1 124 30
 131 002c 7B18     		adds	r3, r7, r1
 132 002e 0122     		movs	r2, #1
 133 0030 DA60     		str	r2, [r3, #12]
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 134              		.loc 1 125 41
 135 0032 7B18     		adds	r3, r7, r1
 136 0034 1022     		movs	r2, #16
 137 0036 1A61     		str	r2, [r3, #16]
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 138              		.loc 1 126 34
 139 0038 7B18     		adds	r3, r7, r1
 140 003a 0222     		movs	r2, #2
 141 003c 1A62     		str	r2, [r3, #32]
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 142              		.loc 1 127 35
 143 003e 7B18     		adds	r3, r7, r1
 144 0040 0022     		movs	r2, #0
 145 0042 5A62     		str	r2, [r3, #36]
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 146              		.loc 1 128 32
 147 0044 7B18     		adds	r3, r7, r1
 148 0046 A022     		movs	r2, #160
 149 0048 9203     		lsls	r2, r2, #14
 150 004a 9A62     		str	r2, [r3, #40]
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 151              		.loc 1 129 32
 152 004c 7B18     		adds	r3, r7, r1
 153 004e 0022     		movs	r2, #0
 154 0050 DA62     		str	r2, [r3, #44]
 130:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s 			page 6


 155              		.loc 1 130 7
 156 0052 7B18     		adds	r3, r7, r1
 157 0054 1800     		movs	r0, r3
 158 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 159 005a 031E     		subs	r3, r0, #0
 160              		.loc 1 130 6
 161 005c 01D0     		beq	.L6
 131:Core/Src/main.c ****   {
 132:Core/Src/main.c ****     Error_Handler();
 162              		.loc 1 132 5
 163 005e FFF7FEFF 		bl	Error_Handler
 164              	.L6:
 133:Core/Src/main.c ****   }
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 136:Core/Src/main.c ****   */
 137:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 165              		.loc 1 137 31
 166 0062 3B00     		movs	r3, r7
 167 0064 0722     		movs	r2, #7
 168 0066 1A60     		str	r2, [r3]
 138:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 139:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 169              		.loc 1 139 34
 170 0068 3B00     		movs	r3, r7
 171 006a 0222     		movs	r2, #2
 172 006c 5A60     		str	r2, [r3, #4]
 140:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 173              		.loc 1 140 35
 174 006e 3B00     		movs	r3, r7
 175 0070 0022     		movs	r2, #0
 176 0072 9A60     		str	r2, [r3, #8]
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 177              		.loc 1 141 36
 178 0074 3B00     		movs	r3, r7
 179 0076 0022     		movs	r2, #0
 180 0078 DA60     		str	r2, [r3, #12]
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 181              		.loc 1 143 7
 182 007a 3B00     		movs	r3, r7
 183 007c 0121     		movs	r1, #1
 184 007e 1800     		movs	r0, r3
 185 0080 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 186 0084 031E     		subs	r3, r0, #0
 187              		.loc 1 143 6
 188 0086 01D0     		beq	.L8
 144:Core/Src/main.c ****   {
 145:Core/Src/main.c ****     Error_Handler();
 189              		.loc 1 145 5
 190 0088 FFF7FEFF 		bl	Error_Handler
 191              	.L8:
 146:Core/Src/main.c ****   }
 147:Core/Src/main.c **** }
 192              		.loc 1 147 1
 193 008c C046     		nop
 194 008e BD46     		mov	sp, r7
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s 			page 7


 195 0090 11B0     		add	sp, sp, #68
 196              		@ sp needed
 197 0092 90BD     		pop	{r4, r7, pc}
 198              		.cfi_endproc
 199              	.LFE41:
 201              		.section	.text.MX_TIM14_Init,"ax",%progbits
 202              		.align	1
 203              		.syntax unified
 204              		.code	16
 205              		.thumb_func
 207              	MX_TIM14_Init:
 208              	.LFB42:
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** /**
 150:Core/Src/main.c ****   * @brief TIM14 Initialization Function
 151:Core/Src/main.c ****   * @param None
 152:Core/Src/main.c ****   * @retval None
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c **** static void MX_TIM14_Init(void)
 155:Core/Src/main.c **** {
 209              		.loc 1 155 1
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 1, uses_anonymous_args = 0
 213 0000 80B5     		push	{r7, lr}
 214              	.LCFI5:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 7, -8
 217              		.cfi_offset 14, -4
 218 0002 00AF     		add	r7, sp, #0
 219              	.LCFI6:
 220              		.cfi_def_cfa_register 7
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 0 */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* USER CODE END TIM14_Init 0 */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 1 */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* USER CODE END TIM14_Init 1 */
 164:Core/Src/main.c ****   htim14.Instance = TIM14;
 221              		.loc 1 164 19
 222 0004 0E4B     		ldr	r3, .L12
 223 0006 0F4A     		ldr	r2, .L12+4
 224 0008 1A60     		str	r2, [r3]
 165:Core/Src/main.c ****   htim14.Init.Prescaler = 47;
 225              		.loc 1 165 25
 226 000a 0D4B     		ldr	r3, .L12
 227 000c 2F22     		movs	r2, #47
 228 000e 5A60     		str	r2, [r3, #4]
 166:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 229              		.loc 1 166 27
 230 0010 0B4B     		ldr	r3, .L12
 231 0012 0022     		movs	r2, #0
 232 0014 9A60     		str	r2, [r3, #8]
 167:Core/Src/main.c ****   htim14.Init.Period = 100;
 233              		.loc 1 167 22
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s 			page 8


 234 0016 0A4B     		ldr	r3, .L12
 235 0018 6422     		movs	r2, #100
 236 001a DA60     		str	r2, [r3, #12]
 168:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 237              		.loc 1 168 29
 238 001c 084B     		ldr	r3, .L12
 239 001e 0022     		movs	r2, #0
 240 0020 1A61     		str	r2, [r3, #16]
 169:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 241              		.loc 1 169 33
 242 0022 074B     		ldr	r3, .L12
 243 0024 0022     		movs	r2, #0
 244 0026 9A61     		str	r2, [r3, #24]
 170:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 245              		.loc 1 170 7
 246 0028 054B     		ldr	r3, .L12
 247 002a 1800     		movs	r0, r3
 248 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 249 0030 031E     		subs	r3, r0, #0
 250              		.loc 1 170 6
 251 0032 01D0     		beq	.L11
 171:Core/Src/main.c ****   {
 172:Core/Src/main.c ****     Error_Handler();
 252              		.loc 1 172 5
 253 0034 FFF7FEFF 		bl	Error_Handler
 254              	.L11:
 173:Core/Src/main.c ****   }
 174:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 2 */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* USER CODE END TIM14_Init 2 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** }
 255              		.loc 1 178 1
 256 0038 C046     		nop
 257 003a BD46     		mov	sp, r7
 258              		@ sp needed
 259 003c 80BD     		pop	{r7, pc}
 260              	.L13:
 261 003e C046     		.align	2
 262              	.L12:
 263 0040 00000000 		.word	htim14
 264 0044 00200040 		.word	1073750016
 265              		.cfi_endproc
 266              	.LFE42:
 268              		.section	.text.MX_TIM16_Init,"ax",%progbits
 269              		.align	1
 270              		.syntax unified
 271              		.code	16
 272              		.thumb_func
 274              	MX_TIM16_Init:
 275              	.LFB43:
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** /**
 181:Core/Src/main.c ****   * @brief TIM16 Initialization Function
 182:Core/Src/main.c ****   * @param None
 183:Core/Src/main.c ****   * @retval None
 184:Core/Src/main.c ****   */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s 			page 9


 185:Core/Src/main.c **** static void MX_TIM16_Init(void)
 186:Core/Src/main.c **** {
 276              		.loc 1 186 1
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280 0000 80B5     		push	{r7, lr}
 281              	.LCFI7:
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 7, -8
 284              		.cfi_offset 14, -4
 285 0002 00AF     		add	r7, sp, #0
 286              	.LCFI8:
 287              		.cfi_def_cfa_register 7
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 0 */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* USER CODE END TIM16_Init 0 */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 1 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* USER CODE END TIM16_Init 1 */
 195:Core/Src/main.c ****   htim16.Instance = TIM16;
 288              		.loc 1 195 19
 289 0004 0F4B     		ldr	r3, .L17
 290 0006 104A     		ldr	r2, .L17+4
 291 0008 1A60     		str	r2, [r3]
 196:Core/Src/main.c ****   htim16.Init.Prescaler = 47;
 292              		.loc 1 196 25
 293 000a 0E4B     		ldr	r3, .L17
 294 000c 2F22     		movs	r2, #47
 295 000e 5A60     		str	r2, [r3, #4]
 197:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 296              		.loc 1 197 27
 297 0010 0C4B     		ldr	r3, .L17
 298 0012 0022     		movs	r2, #0
 299 0014 9A60     		str	r2, [r3, #8]
 198:Core/Src/main.c ****   htim16.Init.Period = 10000;
 300              		.loc 1 198 22
 301 0016 0B4B     		ldr	r3, .L17
 302 0018 0C4A     		ldr	r2, .L17+8
 303 001a DA60     		str	r2, [r3, #12]
 199:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 304              		.loc 1 199 29
 305 001c 094B     		ldr	r3, .L17
 306 001e 0022     		movs	r2, #0
 307 0020 1A61     		str	r2, [r3, #16]
 200:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 308              		.loc 1 200 33
 309 0022 084B     		ldr	r3, .L17
 310 0024 0022     		movs	r2, #0
 311 0026 5A61     		str	r2, [r3, #20]
 201:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 312              		.loc 1 201 33
 313 0028 064B     		ldr	r3, .L17
 314 002a 0022     		movs	r2, #0
 315 002c 9A61     		str	r2, [r3, #24]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s 			page 10


 202:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 316              		.loc 1 202 7
 317 002e 054B     		ldr	r3, .L17
 318 0030 1800     		movs	r0, r3
 319 0032 FFF7FEFF 		bl	HAL_TIM_Base_Init
 320 0036 031E     		subs	r3, r0, #0
 321              		.loc 1 202 6
 322 0038 01D0     		beq	.L16
 203:Core/Src/main.c ****   {
 204:Core/Src/main.c ****     Error_Handler();
 323              		.loc 1 204 5
 324 003a FFF7FEFF 		bl	Error_Handler
 325              	.L16:
 205:Core/Src/main.c ****   }
 206:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 2 */
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE END TIM16_Init 2 */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** }
 326              		.loc 1 210 1
 327 003e C046     		nop
 328 0040 BD46     		mov	sp, r7
 329              		@ sp needed
 330 0042 80BD     		pop	{r7, pc}
 331              	.L18:
 332              		.align	2
 333              	.L17:
 334 0044 00000000 		.word	htim16
 335 0048 00440140 		.word	1073824768
 336 004c 10270000 		.word	10000
 337              		.cfi_endproc
 338              	.LFE43:
 340              		.section	.text.MX_GPIO_Init,"ax",%progbits
 341              		.align	1
 342              		.syntax unified
 343              		.code	16
 344              		.thumb_func
 346              	MX_GPIO_Init:
 347              	.LFB44:
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** /**
 213:Core/Src/main.c ****   * @brief GPIO Initialization Function
 214:Core/Src/main.c ****   * @param None
 215:Core/Src/main.c ****   * @retval None
 216:Core/Src/main.c ****   */
 217:Core/Src/main.c **** static void MX_GPIO_Init(void)
 218:Core/Src/main.c **** {
 348              		.loc 1 218 1
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 32
 351              		@ frame_needed = 1, uses_anonymous_args = 0
 352 0000 90B5     		push	{r4, r7, lr}
 353              	.LCFI9:
 354              		.cfi_def_cfa_offset 12
 355              		.cfi_offset 4, -12
 356              		.cfi_offset 7, -8
 357              		.cfi_offset 14, -4
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s 			page 11


 358 0002 89B0     		sub	sp, sp, #36
 359              	.LCFI10:
 360              		.cfi_def_cfa_offset 48
 361 0004 00AF     		add	r7, sp, #0
 362              	.LCFI11:
 363              		.cfi_def_cfa_register 7
 219:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 364              		.loc 1 219 20
 365 0006 0C24     		movs	r4, #12
 366 0008 3B19     		adds	r3, r7, r4
 367 000a 1800     		movs	r0, r3
 368 000c 1423     		movs	r3, #20
 369 000e 1A00     		movs	r2, r3
 370 0010 0021     		movs	r1, #0
 371 0012 FFF7FEFF 		bl	memset
 372              	.LBB4:
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 222:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 373              		.loc 1 222 3
 374 0016 444B     		ldr	r3, .L20
 375 0018 5A69     		ldr	r2, [r3, #20]
 376 001a 434B     		ldr	r3, .L20
 377 001c 8021     		movs	r1, #128
 378 001e 0903     		lsls	r1, r1, #12
 379 0020 0A43     		orrs	r2, r1
 380 0022 5A61     		str	r2, [r3, #20]
 381 0024 404B     		ldr	r3, .L20
 382 0026 5A69     		ldr	r2, [r3, #20]
 383 0028 8023     		movs	r3, #128
 384 002a 1B03     		lsls	r3, r3, #12
 385 002c 1340     		ands	r3, r2
 386 002e BB60     		str	r3, [r7, #8]
 387 0030 BB68     		ldr	r3, [r7, #8]
 388              	.LBE4:
 389              	.LBB5:
 223:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 390              		.loc 1 223 3
 391 0032 3D4B     		ldr	r3, .L20
 392 0034 5A69     		ldr	r2, [r3, #20]
 393 0036 3C4B     		ldr	r3, .L20
 394 0038 8021     		movs	r1, #128
 395 003a 8902     		lsls	r1, r1, #10
 396 003c 0A43     		orrs	r2, r1
 397 003e 5A61     		str	r2, [r3, #20]
 398 0040 394B     		ldr	r3, .L20
 399 0042 5A69     		ldr	r2, [r3, #20]
 400 0044 8023     		movs	r3, #128
 401 0046 9B02     		lsls	r3, r3, #10
 402 0048 1340     		ands	r3, r2
 403 004a 7B60     		str	r3, [r7, #4]
 404 004c 7B68     		ldr	r3, [r7, #4]
 405              	.LBE5:
 406              	.LBB6:
 224:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 407              		.loc 1 224 3
 408 004e 364B     		ldr	r3, .L20
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s 			page 12


 409 0050 5A69     		ldr	r2, [r3, #20]
 410 0052 354B     		ldr	r3, .L20
 411 0054 8021     		movs	r1, #128
 412 0056 C902     		lsls	r1, r1, #11
 413 0058 0A43     		orrs	r2, r1
 414 005a 5A61     		str	r2, [r3, #20]
 415 005c 324B     		ldr	r3, .L20
 416 005e 5A69     		ldr	r2, [r3, #20]
 417 0060 8023     		movs	r3, #128
 418 0062 DB02     		lsls	r3, r3, #11
 419 0064 1340     		ands	r3, r2
 420 0066 3B60     		str	r3, [r7]
 421 0068 3B68     		ldr	r3, [r7]
 422              	.LBE6:
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 227:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6
 423              		.loc 1 227 3
 424 006a 3049     		ldr	r1, .L20+4
 425 006c 304B     		ldr	r3, .L20+8
 426 006e 0022     		movs	r2, #0
 427 0070 1800     		movs	r0, r3
 428 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 228:Core/Src/main.c ****                           |GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 229:Core/Src/main.c ****                           |GPIO_PIN_11|GPIO_PIN_12, GPIO_PIN_RESET);
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 232:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5
 429              		.loc 1 232 3
 430 0076 2F49     		ldr	r1, .L20+12
 431 0078 9023     		movs	r3, #144
 432 007a DB05     		lsls	r3, r3, #23
 433 007c 0022     		movs	r2, #0
 434 007e 1800     		movs	r0, r3
 435 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 233:Core/Src/main.c ****                           |GPIO_PIN_6|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_15, GPIO_PIN_RESET);
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 236:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_10
 436              		.loc 1 236 3
 437 0084 2C49     		ldr	r1, .L20+16
 438 0086 2D4B     		ldr	r3, .L20+20
 439 0088 0022     		movs	r2, #0
 440 008a 1800     		movs	r0, r3
 441 008c FFF7FEFF 		bl	HAL_GPIO_WritePin
 237:Core/Src/main.c ****                           |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14
 238:Core/Src/main.c ****                           |GPIO_PIN_15|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5
 239:Core/Src/main.c ****                           |GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /*Configure GPIO pins : PC13 PC4 PC5 PC6
 242:Core/Src/main.c ****                            PC7 PC8 PC9 PC10
 243:Core/Src/main.c ****                            PC11 PC12 */
 244:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6
 442              		.loc 1 244 23
 443 0090 3B19     		adds	r3, r7, r4
 444 0092 264A     		ldr	r2, .L20+4
 445 0094 1A60     		str	r2, [r3]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s 			page 13


 245:Core/Src/main.c ****                           |GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 246:Core/Src/main.c ****                           |GPIO_PIN_11|GPIO_PIN_12;
 247:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 446              		.loc 1 247 24
 447 0096 3B19     		adds	r3, r7, r4
 448 0098 0122     		movs	r2, #1
 449 009a 5A60     		str	r2, [r3, #4]
 248:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 450              		.loc 1 248 24
 451 009c 3B19     		adds	r3, r7, r4
 452 009e 0022     		movs	r2, #0
 453 00a0 9A60     		str	r2, [r3, #8]
 249:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 454              		.loc 1 249 25
 455 00a2 3B19     		adds	r3, r7, r4
 456 00a4 0022     		movs	r2, #0
 457 00a6 DA60     		str	r2, [r3, #12]
 250:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 458              		.loc 1 250 3
 459 00a8 3B19     		adds	r3, r7, r4
 460 00aa 214A     		ldr	r2, .L20+8
 461 00ac 1900     		movs	r1, r3
 462 00ae 1000     		movs	r0, r2
 463 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /*Configure GPIO pins : PC0 PC1 PC2 PC3 */
 253:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
 464              		.loc 1 253 23
 465 00b4 3B19     		adds	r3, r7, r4
 466 00b6 0F22     		movs	r2, #15
 467 00b8 1A60     		str	r2, [r3]
 254:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 468              		.loc 1 254 24
 469 00ba 3B19     		adds	r3, r7, r4
 470 00bc 0022     		movs	r2, #0
 471 00be 5A60     		str	r2, [r3, #4]
 255:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 472              		.loc 1 255 24
 473 00c0 3B19     		adds	r3, r7, r4
 474 00c2 0022     		movs	r2, #0
 475 00c4 9A60     		str	r2, [r3, #8]
 256:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 476              		.loc 1 256 3
 477 00c6 3B19     		adds	r3, r7, r4
 478 00c8 194A     		ldr	r2, .L20+8
 479 00ca 1900     		movs	r1, r3
 480 00cc 1000     		movs	r0, r2
 481 00ce FFF7FEFF 		bl	HAL_GPIO_Init
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /*Configure GPIO pins : PA2 PA3 PA4 PA5
 259:Core/Src/main.c ****                            PA6 PA9 PA10 PA15 */
 260:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5
 482              		.loc 1 260 23
 483 00d2 3B19     		adds	r3, r7, r4
 484 00d4 174A     		ldr	r2, .L20+12
 485 00d6 1A60     		str	r2, [r3]
 261:Core/Src/main.c ****                           |GPIO_PIN_6|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_15;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s 			page 14


 262:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 486              		.loc 1 262 24
 487 00d8 3B19     		adds	r3, r7, r4
 488 00da 0122     		movs	r2, #1
 489 00dc 5A60     		str	r2, [r3, #4]
 263:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 490              		.loc 1 263 24
 491 00de 3B19     		adds	r3, r7, r4
 492 00e0 0022     		movs	r2, #0
 493 00e2 9A60     		str	r2, [r3, #8]
 264:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 494              		.loc 1 264 25
 495 00e4 3B19     		adds	r3, r7, r4
 496 00e6 0022     		movs	r2, #0
 497 00e8 DA60     		str	r2, [r3, #12]
 265:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 498              		.loc 1 265 3
 499 00ea 3A19     		adds	r2, r7, r4
 500 00ec 9023     		movs	r3, #144
 501 00ee DB05     		lsls	r3, r3, #23
 502 00f0 1100     		movs	r1, r2
 503 00f2 1800     		movs	r0, r3
 504 00f4 FFF7FEFF 		bl	HAL_GPIO_Init
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB10
 268:Core/Src/main.c ****                            PB11 PB12 PB13 PB14
 269:Core/Src/main.c ****                            PB15 PB3 PB4 PB5
 270:Core/Src/main.c ****                            PB6 PB7 PB8 PB9 */
 271:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_10
 505              		.loc 1 271 23
 506 00f8 2100     		movs	r1, r4
 507 00fa 7B18     		adds	r3, r7, r1
 508 00fc 0E4A     		ldr	r2, .L20+16
 509 00fe 1A60     		str	r2, [r3]
 272:Core/Src/main.c ****                           |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14
 273:Core/Src/main.c ****                           |GPIO_PIN_15|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5
 274:Core/Src/main.c ****                           |GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 275:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 510              		.loc 1 275 24
 511 0100 7B18     		adds	r3, r7, r1
 512 0102 0122     		movs	r2, #1
 513 0104 5A60     		str	r2, [r3, #4]
 276:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 514              		.loc 1 276 24
 515 0106 7B18     		adds	r3, r7, r1
 516 0108 0022     		movs	r2, #0
 517 010a 9A60     		str	r2, [r3, #8]
 277:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 518              		.loc 1 277 25
 519 010c 7B18     		adds	r3, r7, r1
 520 010e 0022     		movs	r2, #0
 521 0110 DA60     		str	r2, [r3, #12]
 278:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 522              		.loc 1 278 3
 523 0112 7B18     		adds	r3, r7, r1
 524 0114 094A     		ldr	r2, .L20+20
 525 0116 1900     		movs	r1, r3
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s 			page 15


 526 0118 1000     		movs	r0, r2
 527 011a FFF7FEFF 		bl	HAL_GPIO_Init
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** }
 528              		.loc 1 280 1
 529 011e C046     		nop
 530 0120 BD46     		mov	sp, r7
 531 0122 09B0     		add	sp, sp, #36
 532              		@ sp needed
 533 0124 90BD     		pop	{r4, r7, pc}
 534              	.L21:
 535 0126 C046     		.align	2
 536              	.L20:
 537 0128 00100240 		.word	1073876992
 538 012c F03F0000 		.word	16368
 539 0130 00080048 		.word	1207961600
 540 0134 7C860000 		.word	34428
 541 0138 FFFF0000 		.word	65535
 542 013c 00040048 		.word	1207960576
 543              		.cfi_endproc
 544              	.LFE44:
 546              		.section	.text.Error_Handler,"ax",%progbits
 547              		.align	1
 548              		.global	Error_Handler
 549              		.syntax unified
 550              		.code	16
 551              		.thumb_func
 553              	Error_Handler:
 554              	.LFB45:
 281:Core/Src/main.c **** 
 282:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** /* USER CODE END 4 */
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** /**
 287:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 288:Core/Src/main.c ****   * @retval None
 289:Core/Src/main.c ****   */
 290:Core/Src/main.c **** void Error_Handler(void)
 291:Core/Src/main.c **** {
 555              		.loc 1 291 1
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 1, uses_anonymous_args = 0
 559 0000 80B5     		push	{r7, lr}
 560              	.LCFI12:
 561              		.cfi_def_cfa_offset 8
 562              		.cfi_offset 7, -8
 563              		.cfi_offset 14, -4
 564 0002 00AF     		add	r7, sp, #0
 565              	.LCFI13:
 566              		.cfi_def_cfa_register 7
 567              	.LBB7:
 568              	.LBB8:
 569              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s 			page 16


   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s 			page 17


  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s 			page 18


 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 570              		.loc 2 142 3
 571              		.syntax divided
 572              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 573 0004 72B6     		cpsid i
 574              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 575              		.loc 2 143 1
 576              		.thumb
 577              		.syntax unified
 578 0006 C046     		nop
 579              	.L23:
 580              	.LBE8:
 581              	.LBE7:
 292:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 293:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 294:Core/Src/main.c ****   __disable_irq();
 295:Core/Src/main.c ****   while (1)
 582              		.loc 1 295 9 discriminator 1
 583 0008 FEE7     		b	.L23
 584              		.cfi_endproc
 585              	.LFE45:
 587              		.text
 588              	.Letext0:
 589              		.file 3 "/Users/seojisu/Library/Arm-GCC-xPack/arm-none-eabi/include/machine/_default_types.h"
 590              		.file 4 "/Users/seojisu/Library/Arm-GCC-xPack/arm-none-eabi/include/sys/_stdint.h"
 591              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x8.h"
 592              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 593              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 594              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 595              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 596              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s 			page 19


 597              		.file 11 "Core/Inc/main.h"
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s:22     .bss.htim14:0000000000000000 htim14
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s:19     .bss.htim14:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s:29     .bss.htim16:0000000000000000 htim16
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s:26     .bss.htim16:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s:32     .text.main:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s:38     .text.main:0000000000000000 main
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s:92     .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s:346    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s:207    .text.MX_TIM14_Init:0000000000000000 MX_TIM14_Init
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s:274    .text.MX_TIM16_Init:0000000000000000 MX_TIM16_Init
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s:80     .text.main:0000000000000034 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s:86     .text.SystemClock_Config:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s:553    .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s:202    .text.MX_TIM14_Init:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s:263    .text.MX_TIM14_Init:0000000000000040 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s:269    .text.MX_TIM16_Init:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s:334    .text.MX_TIM16_Init:0000000000000044 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s:341    .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s:537    .text.MX_GPIO_Init:0000000000000128 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccKhjIcn.s:547    .text.Error_Handler:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_Init
HAL_TIM_Base_Start_IT
Os_Init_Task
Os_Handler
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_TIM_Base_Init
HAL_GPIO_WritePin
HAL_GPIO_Init
